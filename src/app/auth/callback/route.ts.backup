import { NextRequest, NextResponse } from "next/server";

export async function GET(request: NextRequest) {
	try {
		let urlObj: URL;
		try {
			urlObj = new URL(request.url);
		} catch {
			return NextResponse.redirect(
				`${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/auth/auth-error`
			);
		}
		const { searchParams, origin } = urlObj;
		const code = searchParams.get("code");
		const originParam = searchParams.get("origin") || "/";

		if (!code) {
			return NextResponse.redirect(`${origin}/auth/auth-error`);
		}

		const { createClient } = await import("@/utils/supabase/server");
		const supabase = await createClient();
		try {
			const { error } = await supabase.auth.exchangeCodeForSession(
				code
			);
			if (error) {
				return NextResponse.redirect(`${origin}/auth/auth-error`);
			}

			let targetPath = "/";
			try {
				if (originParam && originParam.startsWith("/")) {
					targetPath = decodeURIComponent(originParam);
				}
			} catch {
				targetPath = "/";
			}

			return NextResponse.redirect(`${origin}${targetPath}`);
		} catch {
			return NextResponse.redirect(`${origin}/auth/auth-error`);
		}
	} catch {
		return NextResponse.redirect(`${process.env.NEXT_PUBLIC_APP_URL || 'http://localhost:3000'}/auth/auth-error`);
	}
}
